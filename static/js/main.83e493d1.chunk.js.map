{"version":3,"sources":["components/Filter/Filter.module.css","redux/actions.js","components/Contacts/Contacts.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","App.js","redux/reducers.js","redux/store.js","index.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","Contacts","contactsItem","useSelector","state","contacts","items","filter","toLowerCase","includes","getVisibleContacts","dispatch","useDispatch","className","s","contactsList","map","item","contactsText","contactsBtn","type","onClick","Form","useState","setName","setNumber","handleInput","event","currentTarget","value","reset","onSubmit","preventDefault","form","formLabel","formInput","onChange","pattern","title","required","formBtn","Filter","filterWrapper","filterLabel","filterInput","e","target","App","contactsInitialState","createReducer","window","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.83e493d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__3_mJU\",\"filterLabel\":\"Filter_filterLabel__x13Up\",\"filterInput\":\"Filter_filterInput__36nVM\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      name,\r\n      id: uuidv4(),\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const filterContact = createAction('contacts/filter');\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\nimport s from './Contacts.module.css';\r\n\r\nexport default function Contacts() {\r\n  const getVisibleContacts = (items, filter) => {\r\n    return items.filter(({ name }) => name.toLowerCase().includes(filter));\r\n  };\r\n\r\n  const contactsItem = useSelector(state => {\r\n    const { items, filter } = state.contacts;\r\n    return getVisibleContacts(items, filter);\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  if (contactsItem) {\r\n    return (\r\n      <ul className={s.contactsList}>\r\n        {contactsItem.map(item => (\r\n          <li key={item.id} className={s.contactsItem}>\r\n            <p className={s.contactsText}>\r\n              {item.name}: {item.number}\r\n            </p>\r\n            <button\r\n              className={s.contactsBtn}\r\n              type=\"button\"\r\n              onClick={() => dispatch(deleteContact(item.id))}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/actions';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === 'name') {\r\n      setName(value);\r\n    } else if (name === 'number') {\r\n      setNumber(value);\r\n    }\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      addContact({\r\n        name,\r\n        number,\r\n      }),\r\n    );\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.formLabel}>\r\n        Name\r\n        <input\r\n          className={s.formInput}\r\n          value={name}\r\n          onChange={handleInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.formLabel}>\r\n        Number\r\n        <input\r\n          className={s.formInput}\r\n          value={number}\r\n          onChange={handleInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.formBtn}>\r\n        Add to contacts\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterContact } from '../../redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label className={s.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={e => dispatch(filterContact(e.target.value))}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Contacts from './components/Contacts';\r\nimport Form from './components/Form';\r\nimport Filter from './components/Filter';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <Contacts />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContact } from './actions';\r\n\r\nconst contactsInitialState = {\r\n  items: [],\r\n  filter: '',\r\n};\r\n\r\nconst items = createReducer(contactsInitialState.items, {\r\n  [addContact]: (state, { payload }) => {\r\n    const nameArray = state.map(item => {\r\n      return item.name;\r\n    });\r\n    if (nameArray.includes(payload.name)) {\r\n      window.alert(`${payload.name} is already in contacts.`);\r\n      return state;\r\n    } else {\r\n      return [...state, payload];\r\n    }\r\n  },\r\n  [deleteContact]: (state, { payload }) => {\r\n    return state.filter(({ id }) => id !== payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer(contactsInitialState.filter, {\r\n  [filterContact]: (_, { payload }) => {\r\n    return payload.toLowerCase();\r\n  },\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n  key: 'Contacts',\r\n  storage,\r\n  blacklist: 'filter',\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2BcfF\",\"formLabel\":\"Form_formLabel__dhXMe\",\"formInput\":\"Form_formInput__v9n_f\",\"formBtn\":\"Form_formBtn__1PVjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"Contacts_contactsItem__1eh8w\",\"contactsText\":\"Contacts_contactsText__3zcFA\",\"contactsBtn\":\"Contacts_contactsBtn__356qb\"};"],"sourceRoot":""}